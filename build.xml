<?xml version="1.0"?>
<project name="training" default="main">

    <property name="src.main.java" value="src/main/java"/>
    <property name="src.test.java" value="src/test/java"/>
    <property name="src.main.resource" value="src/main/resource"/>
    <property name="src.test.resource" value="src/test/resource"/>
    <property name="jar" value="jar"/>

    <property name="out" value="out"/>
    <property name="out.main.java" value="${out}/main/java"/>
    <property name="out.test.java" value="${out}/test/java"/>
    <property name="out.report.checkstyle.xml" value="${out}/report/checkstyle/xml"/>
    <property name="out.report.checkstyle.html" value="${out}/report/checkstyle/html"/>
    <property name="out.report.coverage.html" value="${out}/report/coverage/html"/>
    <property name="out.report.junit.xml" value="${out}/report/junit/xml"/>
    <property name="out.report.junit.html" value="${out}/report/junit/html"/>
    <property name="out.report.pmd.html" value="${out}/report/pmd/html"/>
    <property name="out.report.findbugs.html" value="${out}/report/findbugs/html"/>

    <path id="classpath.junit">
        <pathelement location="lib/commons-dbcp2-2.7.0.jar"/>
        <pathelement location="lib/commons-logging-1.2.jar"/>
        <pathelement location="lib/commons-pool2-2.8.0.jar"/>
        <pathelement location="lib/junit-4.11.jar"/>
        <pathelement location="lib/h2-1.3.171.jar"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="lib/dbunit-2.4.9.jar"/>
        <pathelement location="lib/log4j-slf4j-impl-2.7.jar"/>
        <pathelement location="lib/log4j-core-2.7.jar"/>
        <pathelement location="lib/log4j-api-2.7.jar"/>
        <pathelement location="lib/slf4j-api-1.7.5.jar"/>
        <pathelement location="${out.main.java}"/>
        <pathelement location="${src.test.resource}"/>
    </path>

    <path id="pmd.classpath">
        <fileset dir="lib/pmd">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="findbugs.classpath">
        <fileset dir="lib/findbugs-3.0.1/lib">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="clear">
        <delete dir="out"/>
    </target>

    <target name="init" depends="clear">
        <mkdir dir="${out.main.java}"/>
        <mkdir dir="${out.test.java}"/>
        <mkdir dir="${out.report.checkstyle.xml}"/>
        <mkdir dir="${out.report.checkstyle.html}"/>
        <mkdir dir="${out.report.coverage.html}"/>
        <mkdir dir="${out.report.junit.xml}"/>
        <mkdir dir="${out.report.junit.html}"/>
        <mkdir dir="${out.report.pmd.html}"/>
        <mkdir dir="${out.report.findbugs.html}"/>
        <mkdir dir="jar"/>
    </target>

    <target name="checkstyle" depends="init">
        <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties"
                 classpath="lib/checkstyle-8.29-all.jar"/>
        <checkstyle config="${src.main.resource}/sun_checks.xml"
                    failOnViolation="false">
            <fileset dir="${src.main.java}"/>
            <fileset dir="${src.test.java}"/>
            <formatter type="xml" toFile="${out.report.checkstyle.xml}/checkstyle_errors.xml"/>
        </checkstyle>

        <xslt in="${out.report.checkstyle.xml}/checkstyle_errors.xml"
              out="${out.report.checkstyle.html}/checkstyle_report.html"
              xslresource="${src.main.resource}/checkstyle.xsl"/>
    </target>

    <target name="compile" depends="checkstyle">
        <javac srcdir="${src.main.java}" destdir="${out.main.java}" includeantruntime="false"
               debug="true" debuglevel="lines,vars,source">
            <classpath refid="classpath.junit"/>
        </javac>
    </target>

    <target name="test-compile" depends="compile">
        <javac srcdir="${src.test.java}" destdir="${out.test.java}" includeantruntime="false"
               debug="true" debuglevel="lines,vars,source">
            <classpath refid="classpath.junit"/>
        </javac>
    </target>

    <taskdef name="jacoco-coverage" classname="org.jacoco.ant.CoverageTask">
        <classpath>
            <fileset dir="lib/jacoco">
                <include name="*.jar"/>
            </fileset>
        </classpath>
    </taskdef>

    <target name="test" depends="test-compile">
        <jacoco-coverage destfile="${out.report.coverage.html}/jacoco.exec">
            <junit printsummary="no" haltonfailure="no" fork="yes">
                <classpath>
                    <path refid="classpath.junit"/>
                    <pathelement location="${out.test.java}"/>
                </classpath>
                <batchtest fork="yes" todir="${out.report.junit.xml}">
                    <formatter type="xml"/>
                    <fileset dir="${out.test.java}" includes="**/*Test.class"/>
                </batchtest>
                <formatter type="xml"/>
            </junit>
        </jacoco-coverage>
    </target>

    <target name="test-reports" depends="test">
        <junitreport todir="${out.report.junit.xml}">
            <fileset dir="${out.report.junit.xml}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${out.report.junit.html}"/>
        </junitreport>
    </target>

    <taskdef name="jacoco-report" classname="org.jacoco.ant.ReportTask">
        <classpath>
            <fileset dir="lib/jacoco">
                <include name="*.jar"/>
            </fileset>
        </classpath>
    </taskdef>

    <target name="test-coverage">
        <jacoco-report>
            <executiondata>
                <file file="${out.report.coverage.html}/jacoco.exec"/>
            </executiondata>
            <structure name="jacoco">
                <classfiles>
                    <fileset dir="out/main/java/com/dao">
                        <include name="**/Jdbc*.class"/>
                    </fileset>
                </classfiles>
                <sourcefiles encoding="UTF-8">
                    <fileset dir="src/main/java">
                        <include name="**/Jdbc*.java"/>
                    </fileset>
                </sourcefiles>
            </structure>
            <html destdir="${out.report.coverage.html}"/>
        </jacoco-report>
    </target>

    <target name="pmd">
        <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"
                 classpathref="pmd.classpath"/>
        <pmd shortfilenames="false" nocache="true">
            <formatter type="html" toFile="${out.report.pmd.html}/pmd_report.html" toConsole="true"/>
            <ruleset>src/main/resource/pmd_rules_java.xml</ruleset>
            <fileset dir="${src.main.java}" includes="**/*.java"/>
            <fileset dir="${src.test.java}" includes="**/*.java"/>
        </pmd>
    </target>

    <target name="jar">
        <jar destfile="jar/application.jar" basedir="${out.main.java}">
            <include name="**/*.class"/>
        </jar>
    </target>

    <target name="findbugs" depends="jar">
        <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
                 classpathref="findbugs.classpath"/>

        <findbugs home="lib/findbugs-3.0.1/lib" output="html"
                  outputFile="out/report/findbugs/html/findbugs_report.html">
            <class location="jar/application.jar"/>
            <auxclasspath>
                <fileset file="lib/findbugs-3.0.1/lib/*.jar"/>
                <fileset file="lib/*.jar"/>
            </auxclasspath>
        </findbugs>
    </target>

    <target name="main" depends="test-reports, test-coverage, pmd, findbugs">
        <jar destfile="${jar}/all_project.jar" basedir="${out}">
            <include name="**/*.class"/>
            <include name="**/report/**"/>
            <exclude name="**/test/**"/>
        </jar>
    </target>
</project>